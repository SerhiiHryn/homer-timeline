{"version":3,"sources":["redux/actions/event.actions.js","redux/types/event.types.js","components/AddEventButton/AddEventButton.js","components/DatePicker/DatePicker.js","components/UI/Input/Input.js","components/UI/Loader/Loader.js","components/AddEventForm/AddEventForm.js","utils.js","components/Event/Event.js","components/EventList/EventList.js","components/EventsDivider/EventsDivider.js","components/Timeline/Timeline.js","App.js","services/event.service.js","redux/reducers/event.reducer.js","redux/reducers/index.js","redux/sagas/event.sagas.js","redux/sagas/rootSaga.js","redux/store.js","serviceWorker.js","index.js","add-event-button.svg","thumbnail.jpg"],"names":["eventActions","type","show","payload","data","newEvent","event","error","events","AddEventButton","dispatch","useDispatch","className","src","addEventButton","alt","onClick","DatePicker","value","onChange","selected","Date","placeholderText","showYearDropdown","showMonthDropdown","dateFormat","Input","label","name","id","placeholder","htmlFor","Loader","AddEventForm","useState","showError","setShowError","useSelector","state","loading","showNewEventForm","classes","push","inputChangeHandler","target","addEventHandler","a","title","date","join","description","tag","thumbnail","dateString","JSON","stringify","substring","length","utils","toLocaleDateString","undefined","year","month","day","getTime","now","Event","showYear","isFutureEvent","getFullYear","getEventYear","EventList","years","map","e","eventYear","includes","Fragment","key","EventsDivider","Timeline","pastEvents","futureEvents","hasFutureEvents","hasPastEvents","App","useEffect","eventService","addEvent","Promise","resolve","setTimeout","parse","localStorage","getItem","setItem","getEvents","sortEvents","forEach","this","orderEvents","sort","by","order","initialState","rootReducer","combineReducers","action","addEventWorker","getEventsWorker","put","call","eventSagas","takeEvery","rootSaga","all","saga","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.6ae38cad.chunk.js","sourcesContent":["import {\n  ADD_EVENT,\n  ADD_EVENT_SUCCESS,\n  ADD_EVENT_ERROR,\n  GET_EVENTS,\n  GET_EVENTS_SUCCESS,\n  GET_EVENTS_ERROR,\n  LOADING_END,\n  LOADING_START, SHOW_NEW_EVENT_FORM, SET_NEW_EVENT\n} from '../types/event.types';\n\nexport const eventActions = {\n  loadingStart: () => ({ type: LOADING_START }),\n  loadingEnd: () => ({ type: LOADING_END }),\n\n  showForm: show => ({ type: SHOW_NEW_EVENT_FORM, payload: { data: show } }),\n\n  setNewEvent: newEvent => ({ type: SET_NEW_EVENT, payload: { data: newEvent } }),\n\n  addEvent: event => ({ type: ADD_EVENT, payload: { data: event } }),\n  addEventSuccess: event => ({ type: ADD_EVENT_SUCCESS, payload: { data: event } }),\n  addEventError: error => ({ type: ADD_EVENT_ERROR, payload: { error } }),\n\n  getEvents: () => ({ type: GET_EVENTS }),\n  getEventsSuccess: events => ({ type: GET_EVENTS_SUCCESS, payload: { data: events } }),\n  getEventsError: error => ({ type: GET_EVENTS_ERROR, payload: { error } }),\n};\n","export const LOADING_START = 'EVENT/LOADING_START';\nexport const LOADING_END = 'EVENT/LOADING_END';\n\nexport const SHOW_NEW_EVENT_FORM = 'EVENT/SHOW_NEW_EVENT_FORM';\n\nexport const SET_NEW_EVENT = 'EVENT/SET_NEW_EVENT';\n\nexport const ADD_EVENT = 'EVENT/ADD_EVENT';\nexport const ADD_EVENT_SUCCESS = 'EVENT/ADD_EVENT_SUCCESS';\nexport const ADD_EVENT_ERROR = 'EVENT/ADD_EVENT_ERROR';\n\nexport const GET_EVENTS = 'EVENT/GET_EVENTS';\nexport const GET_EVENTS_SUCCESS = 'EVENT/GET_EVENTS_SUCCESS';\nexport const GET_EVENTS_ERROR = 'EVENT/GET_EVENTS_ERROR';\n","import React from 'react';\nimport addEventButton from '../../add-event-button.svg';\nimport { useDispatch } from 'react-redux';\nimport { eventActions } from '../../redux/actions/event.actions';\nimport './AddEventButton.scss';\n\nconst AddEventButton = () => {\n  const dispatch = useDispatch();\n\n  const toggleEventForm = () => {\n    dispatch(eventActions.showForm(true));\n  };\n\n  return (\n    <div className=\"add-event-container\">\n      <div className=\"add-button\">\n        <img\n          src={addEventButton}\n          alt=\"add-event\"\n          onClick={toggleEventForm} />\n      </div>\n    </div>\n  );\n};\n\nexport default AddEventButton;\n","import React from 'react';\nimport DatePickerReact from 'react-datepicker';\nimport './DatePicker.scss';\n\nconst DatePicker = ({ value, onChange }) => {\n  return (\n    <div className=\"date-picker-container\">\n      <DatePickerReact\n        selected={value ? new Date(value) : null}\n        onChange={onChange}\n        placeholderText=\"Select event date\"\n        showYearDropdown\n        showMonthDropdown\n        dateFormat=\"MMMM d, yyyy\"\n      />\n    </div>\n  );\n};\n\nexport default DatePicker;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({ label, value, name, id, type, placeholder, onChange }) => {\n  return (\n    <div className=\"input\">\n      { label ? <label className=\"input__label\" htmlFor={id}>{label}</label> : null}\n      <input\n        id={id}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"lds-roller\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { eventActions } from '../../redux/actions/event.actions';\nimport DatePicker from '../DatePicker/DatePicker';\nimport Input from '../UI/Input/Input';\nimport Loader from '../UI/Loader/Loader';\nimport './AddEventForm.scss';\n\nconst AddEventForm = () => {\n  const dispatch = useDispatch();\n  const [showError, setShowError] = useState(false);\n  const { loading, showNewEventForm, newEvent } = useSelector(state => state.event);\n\n  const classes = ['event-form'];\n\n  if (showNewEventForm) {\n    classes.push('show');\n  }\n\n  const inputChangeHandler = event => {\n    if (showError) setShowError(false);\n\n    dispatch(eventActions.setNewEvent({\n      ...newEvent,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const dateChangeHandler = date => {\n    const dateString = JSON.stringify(date);\n    dispatch(eventActions.setNewEvent({\n      ...newEvent,\n      date: dateString.substring(1, dateString.length - 1),\n    }));\n  };\n\n  const addEventHandler = async () => {\n    if (!newEvent.title || !newEvent.date) {\n      setShowError(true);\n      return;\n    }\n\n    dispatch(eventActions.addEvent(newEvent));\n  };\n\n  const closeForm = () => {\n    // TODO fix reseting newEvent\n    dispatch(eventActions.setNewEvent({\n      title: '',\n      description: '',\n      tag: '',\n    }));\n    dispatch(eventActions.showForm(false));\n  };\n\n  return (\n    <div className={classes.join(' ')}>\n      {loading ? <Loader /> : null}\n      <div className=\"event-form__title\">Add a new event</div>\n      <div className=\"event-form__cancel-btn\" onClick={closeForm}>&times;</div>\n      <div className=\"event-form__fields\">\n        <Input\n          name=\"title\"\n          type=\"text\"\n          value={newEvent.title}\n          placeholder=\"Title\"\n          onChange={inputChangeHandler} />\n        <Input\n          name=\"description\"\n          type=\"text\"\n          value={newEvent.description}\n          placeholder=\"Description\"\n          onChange={inputChangeHandler} />\n        <Input\n          name=\"tag\"\n          type=\"text\"\n          value={newEvent.tag}\n          placeholder=\"Tag\"\n          onChange={inputChangeHandler} />\n        <Input\n          name=\"thumbnail\"\n          type=\"file\"\n          value={newEvent.thumbnail}\n          onChange={inputChangeHandler} />\n        <DatePicker\n          value={newEvent.date}\n          onChange={dateChangeHandler} />\n      </div>\n      <div className=\"event-form__save-button\">\n        <button onClick={addEventHandler}>Save and Publish</button>\n      </div>\n      {\n        showError\n          ?\n          (\n            <div className=\"event-form__error\">\n              Please fill required fields:\n              <ul>\n                <li>Title</li>\n                <li>Date</li>\n              </ul>\n            </div>\n          )\n          : null\n      }\n    </div>\n  );\n};\n\nexport default AddEventForm;\n","export const utils = {\n  formatDate(date) {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n\n    return new Date(date).toLocaleDateString(undefined, options);\n  },\n  isFutureEvent(date) {\n    if (!date) return false;\n    return new Date(date).getTime() > Date.now();\n  },\n};\n","import React from 'react';\nimport thumbnail from '../../thumbnail.jpg';\nimport { utils } from '../../utils';\nimport './Event.scss';\n\nfunction getEventYear(event) {\n  return new Date(event.date).getFullYear();\n}\n\nconst Event = ({ event, showYear, isFutureEvent }) => {\n  return (\n    <>\n      {showYear ? <span className=\"event-year\">{getEventYear(event)}</span> : null}\n      <div className=\"event-container\">\n        <div className={`event ${isFutureEvent ? 'future' : ''}`}>\n          <div className=\"event__thumbnail\">\n            <img src={thumbnail} alt={event.tag} />\n          </div>\n          {\n            event.tag\n              ? (\n                <div className=\"event__tag\">\n                  <div className=\"event__tag__spacer\"></div>\n                  <div className=\"event__tag__text\">{event.tag}</div>\n                </div>\n              )\n              : null}\n          <div className=\"event__title\">\n            <div className=\"event__title__connector-line\"></div>\n            <div className=\"event__title__text\">{event.title}</div>\n          </div>\n          <div className=\"event__description\">{event.description}</div>\n          <div className=\"event__date\">{utils.formatDate(event.date)}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Event;\n","import React from 'react';\nimport Event from '../Event/Event';\nimport './EventList.scss';\n\nconst EventList = ({ events, isFutureEvent }) => {\n  const years = [];\n  return (\n    <div className={`events ${isFutureEvent ? 'future' : 'past'}`}>\n      {\n        events.map(e => {\n          const eventYear = new Date(e.date).getFullYear();\n          const showYear = !years.includes(eventYear);\n\n          if (showYear) {\n            years.push(eventYear);\n          }\n\n          return (\n            <React.Fragment key={e.id}>\n              <Event event={e} showYear={showYear} isFutureEvent={isFutureEvent} />\n            </React.Fragment>\n          );\n        })\n      }\n    </div>\n  );\n};\n\nexport default EventList;\n","import React from 'react';\nimport './EventsDivider.scss';\n\nconst EventsDivider = () => {\n  return (\n    <div className=\"divider-container\">\n      <div className=\"divider\"></div>\n    </div>\n  );\n};\n\nexport default EventsDivider;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AddEventButton from '../AddEventButton/AddEventButton';\nimport AddEventForm from '../AddEventForm/AddEventForm';\nimport EventList from '../EventList/EventList';\nimport EventsDivider from '../EventsDivider/EventsDivider';\nimport Loader from '../UI/Loader/Loader';\nimport './Timeline.scss';\n\nconst Timeline = ({ pastEvents, futureEvents }) => {\n  const { loading, showNewEventForm } = useSelector(state => state.event);\n  const hasFutureEvents = !!futureEvents.length;\n  const hasPastEvents = !!pastEvents.length;\n\n  const classes = ['timeline'];\n\n  if (!hasFutureEvents && !hasPastEvents) {\n    classes.push('center');\n  }\n\n  if (loading && !showNewEventForm) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={classes.join(' ')}>\n      {\n        hasFutureEvents\n          ? (\n            <>\n              <EventList events={futureEvents} isFutureEvent={true} />\n              <EventsDivider />\n            </>\n          )\n          : null\n      }\n      <AddEventButton />\n      <AddEventForm />\n      {hasPastEvents ? < EventList events={pastEvents} isFutureEvent={false} /> : null}\n    </div >\n  );\n};\n\nexport default Timeline;\n","import React, { useEffect } from 'react';\nimport Timeline from './components/Timeline/Timeline';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { eventActions } from './redux/actions/event.actions';\nimport './App.scss';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { pastEvents, futureEvents } = useSelector(state => state.event);\n\n\n  useEffect(() => {\n    dispatch(eventActions.getEvents());\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Timeline pastEvents={pastEvents} futureEvents={futureEvents} />\n    </div>\n  );\n}\n\nexport default App;\n","import sort from 'sort-array';\nimport { utils } from '../utils';\n\nconst EVENTS_STORAGE_KEY = 'events';\n\nexport const eventService = {\n  addEvent(event) {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const events = JSON.parse(localStorage.getItem(EVENTS_STORAGE_KEY) || '[]');\n        event.id = Date.now();\n        events.push(event);\n        localStorage.setItem(EVENTS_STORAGE_KEY, JSON.stringify(events));\n\n        resolve(event);\n      }, 1000);\n    });\n  },\n  getEvents() {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const events = JSON.parse(localStorage.getItem(EVENTS_STORAGE_KEY) || '[]');\n        resolve(events);\n      }, 1000);\n    });\n  },\n  sortEvents(events) {\n    const pastEvents = [];\n    const futureEvents = [];\n\n    events.forEach(event => {\n      utils.isFutureEvent(event.date) ? futureEvents.push(event) : pastEvents.push(event);\n    });\n\n    this.orderEvents(pastEvents);\n    this.orderEvents(futureEvents);\n\n    return {\n      pastEvents,\n      futureEvents,\n    };\n  },\n  orderEvents(events) {\n    sort(events, { by: 'date', order: 'desc' });\n  },\n};\n","import { eventService } from '../../services/event.service';\nimport { utils } from '../../utils';\nimport {\n  ADD_EVENT_SUCCESS,\n  GET_EVENTS_SUCCESS,\n  LOADING_END,\n  LOADING_START,\n  SET_NEW_EVENT,\n  SHOW_NEW_EVENT_FORM\n} from '../types/event.types';\n\nconst initialState = {\n  pastEvents: [],\n  futureEvents: [],\n  showNewEventForm: false,\n  newEvent: {\n    title: '',\n    description: '',\n    tag: '',\n  },\n  loading: false,\n  error: null,\n};\n\nexport const eventReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EVENT_SUCCESS: {\n      const event = action.payload.data;\n\n      if (utils.isFutureEvent(event.date)) {\n        const futureEvents = [...state.futureEvents, event];\n        eventService.orderEvents(futureEvents);\n\n        return { ...state, futureEvents };\n      } else {\n        const pastEvents = [...state.pastEvents, event];\n        eventService.orderEvents(pastEvents);\n\n        return { ...state, pastEvents };\n      }\n    }\n\n    case GET_EVENTS_SUCCESS: {\n      let { pastEvents, futureEvents } = eventService.sortEvents(action.payload.data);\n      return { ...state, pastEvents, futureEvents };\n    }\n\n    case SHOW_NEW_EVENT_FORM: {\n      return { ...state, showNewEventForm: action.payload.data };\n    }\n\n    case SET_NEW_EVENT: {\n      return { ...state, newEvent: action.payload.data };\n    }\n\n    case LOADING_START: {\n      return { ...state, loading: true };\n    }\n\n    case LOADING_END: {\n      return { ...state, loading: false };\n    }\n\n    default: {\n      return { ...state };\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport { eventReducer } from './event.reducer';\n\nexport const rootReducer = combineReducers({\n  event: eventReducer,\n});\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { eventService } from '../../services/event.service';\nimport { eventActions } from '../actions/event.actions';\nimport { ADD_EVENT, GET_EVENTS } from '../types/event.types';\n\n\nfunction* addEventWorker(action) {\n  try {\n    yield put(eventActions.loadingStart());\n    const event = yield call(eventService.addEvent, action.payload.data);\n    yield put(eventActions.addEventSuccess(event));\n    yield put(eventActions.showForm(false));\n    yield put(eventActions.setNewEvent({\n      title: '',\n      description: '',\n      tag: '',\n    }));\n  } catch (e) {\n    yield put(eventActions.addEventError(e));\n  } finally {\n    yield put(eventActions.loadingEnd());\n  }\n}\n\nfunction* getEventsWorker() {\n  try {\n    yield put(eventActions.loadingStart());\n    const events = yield call(eventService.getEvents);\n    yield put(eventActions.getEventsSuccess(events));\n  } catch (e) {\n    yield put(eventActions.getEventsError(e));\n  } finally {\n    yield put(eventActions.loadingEnd());\n  }\n}\n\nexport const eventSagas = [\n  takeEvery(ADD_EVENT, addEventWorker),\n  takeEvery(GET_EVENTS, getEventsWorker),\n];\n","import { all } from 'redux-saga/effects';\nimport { eventSagas } from './event.sagas';\n\n\nexport function* rootSaga() {\n  yield all([...eventSagas]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './reducers';\nimport { rootSaga } from './sagas/rootSaga';\n\nconst saga = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(saga)));\n\nsaga.run(rootSaga);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/add-event-button.c3e113c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbnail.0e9f86f2.jpg\";"],"sourceRoot":""}